Create a function taking a positive integer between 1 and 3999 (both included) 
as its parameter and returning a string containing the Roman Numeral representation of that integer.


def solution(n):
    num = [1, 4, 5, 9, 10, 40, 50, 90,
        100, 400, 500, 900, 1000]
    sym = ["I", "IV", "V", "IX", "X", "XL",
        "L", "XC", "C", "CD", "D", "CM", "M"]
    i=12
    word=""
    while n:
        div = n // num[i]
        n %= num[i]
        while div:
            word += sym[i]
            div -= 1
        i -= 1
    return (word)


OTHER (dictionary)

def solution(n):
    roman_numerals = {1000:'M',
                      900: 'CM',
                      500: 'D',
                      400: 'CD',
                      100: 'C',
                      90: 'XC',
                      50: 'L',
                      40: 'XL',
                      10: 'X',
                      9: 'IX',
                      5: 'V',
                      4: 'IV',
                      1: 'I'
    }
    roman_string = ''
    for key in sorted(roman_numerals.keys(),reverse=True):
        while n >= key:
            roman_string += roman_numerals[key]
            n -= key
    return roman_string
